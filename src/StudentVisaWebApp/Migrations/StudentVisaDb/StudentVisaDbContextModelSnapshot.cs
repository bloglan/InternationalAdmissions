// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentVisaEF.VisaManagement;

#nullable disable

namespace StudentVisaWebApp.Migrations.StudentVisaDb
{
    [DbContext(typeof(StudentVisaDbContext))]
    partial class StudentVisaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VisaManagement.PersonPassport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("WhenChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonPassport");
                });

            modelBuilder.Entity("VisaManagement.PersonVisa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("WhenChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonVisa");
                });

            modelBuilder.Entity("VisaManagement.PersonPassport", b =>
                {
                    b.OwnsOne("VisaManagement.PersonInfo", "Manager", b1 =>
                        {
                            b1.Property<int>("PersonPassportId")
                                .HasColumnType("int");

                            b1.Property<string>("Id")
                                .IsRequired()
                                .HasMaxLength(50)
                                .IsUnicode(false)
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("PersonPassportId");

                            b1.ToTable("PersonPassport");

                            b1.WithOwner()
                                .HasForeignKey("PersonPassportId");
                        });

                    b.OwnsOne("VisaManagement.PersonInfo", "Owner", b1 =>
                        {
                            b1.Property<int>("PersonPassportId")
                                .HasColumnType("int");

                            b1.Property<string>("Id")
                                .IsRequired()
                                .HasMaxLength(50)
                                .IsUnicode(false)
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("PersonPassportId");

                            b1.ToTable("PersonPassport");

                            b1.WithOwner()
                                .HasForeignKey("PersonPassportId");
                        });

                    b.OwnsOne("VisaManagement.PersonPassportInfo", "Passport", b1 =>
                        {
                            b1.Property<int>("PersonPassportId")
                                .HasColumnType("int");

                            b1.Property<string>("Authority")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasMaxLength(10)
                                .IsUnicode(false)
                                .HasColumnType("varchar(10)");

                            b1.Property<DateTime>("DateOfBirth")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateOfExpiration")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateOfIssue")
                                .HasColumnType("datetime2");

                            b1.Property<string>("GivenName")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Nationality")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("PassportNumber")
                                .IsRequired()
                                .HasColumnType("char(9)");

                            b1.Property<string>("PlaceOfBirth")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Sex")
                                .IsRequired()
                                .HasMaxLength(10)
                                .IsUnicode(false)
                                .HasColumnType("varchar(10)");

                            b1.Property<string>("Surname")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasMaxLength(10)
                                .IsUnicode(false)
                                .HasColumnType("varchar(10)");

                            b1.HasKey("PersonPassportId");

                            b1.ToTable("PersonPassport");

                            b1.WithOwner()
                                .HasForeignKey("PersonPassportId");
                        });

                    b.Navigation("Manager")
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Passport")
                        .IsRequired();
                });

            modelBuilder.Entity("VisaManagement.PersonVisa", b =>
                {
                    b.OwnsOne("VisaManagement.PersonInfo", "Manager", b1 =>
                        {
                            b1.Property<int>("PersonVisaId")
                                .HasColumnType("int");

                            b1.Property<string>("Id")
                                .IsRequired()
                                .HasMaxLength(50)
                                .IsUnicode(false)
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("PersonVisaId");

                            b1.ToTable("PersonVisa");

                            b1.WithOwner()
                                .HasForeignKey("PersonVisaId");
                        });

                    b.OwnsOne("VisaManagement.PersonInfo", "Owner", b1 =>
                        {
                            b1.Property<int>("PersonVisaId")
                                .HasColumnType("int");

                            b1.Property<string>("Id")
                                .IsRequired()
                                .HasMaxLength(50)
                                .IsUnicode(false)
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("PersonVisaId");

                            b1.ToTable("PersonVisa");

                            b1.WithOwner()
                                .HasForeignKey("PersonVisaId");
                        });

                    b.OwnsOne("VisaManagement.PersonVisaInfo", "Visa", b1 =>
                        {
                            b1.Property<int>("PersonVisaId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("BirthDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Category")
                                .IsRequired()
                                .HasMaxLength(10)
                                .IsUnicode(false)
                                .HasColumnType("varchar(10)");

                            b1.Property<int>("DurationOfEachStay")
                                .HasColumnType("int");

                            b1.Property<DateTime>("EnterBefore")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Entries")
                                .HasColumnType("int");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("nvarchar(40)");

                            b1.Property<DateTime>("IssueDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("IssuedAt")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("PassportNumber")
                                .IsRequired()
                                .HasColumnType("char(9)");

                            b1.Property<string>("Remarks")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("VisaNumber")
                                .IsRequired()
                                .HasMaxLength(32)
                                .IsUnicode(false)
                                .HasColumnType("varchar(32)");

                            b1.HasKey("PersonVisaId");

                            b1.ToTable("PersonVisa");

                            b1.WithOwner()
                                .HasForeignKey("PersonVisaId");
                        });

                    b.Navigation("Manager")
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Visa")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
